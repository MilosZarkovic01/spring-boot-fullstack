#name: CD - Deploy Backend
#
#on:
#  workflow_dispatch: #for manually triggering workflow
#  push:
#    branches:
#      - main
#    paths:
#      - backend/**
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:15.3
#        env:
#          POSTGRES_USER: somika
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: customer
#        ports:
#          - 5332:5432
#        options:
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#    defaults:
#      run:
#        working-directory: ./
#    steps:
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Deployment started :progress_bar::"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#          cache: 'maven'
#      - name: Loging to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
#      - name: Set build number
#        id: build-number
#        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Building with Maven :maven:"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - name: Build Package Push with Maven
#        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Image tag pushed to Dockerhub :docker:"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - name: Update Dockerrun.aws.json api image tag with new build number
#        run: |
#          echo "Dockerrun.aws.json before updating tag"
#          cat Dockerrun.aws.json
#          sed -i -E 's_(miloszarkovic01/somika-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
#          echo "Dockerrun.aws.json after updating tag"
#          cat Dockerrun.aws.json
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Starting deployment to Elastic Beanstalk :aws:"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - name: Deploy to Elastic Beanstalk
#        uses: einaregilsson/beanstalk-deploy@v21
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: ${{ secrets.EB_APPLICATION_NAME }}
#          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
#          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
#          version_description: ${{github.SHA}}
#          region: ${{ secrets.EB_REGION }}
#          deployment_package: backend/Dockerrun.aws.json
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = ":githubloading: Commiting to repo https://github.com/MilosZarkovic01/spring-boot-fullstack"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - name: Commit and push Dockerrun.aws.json
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add .
#          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
#          git push
#      - name: Send Slack Message
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Deployment and commit completed :github_check_mark:"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
#      - name: Send Slack Message
#        if: always()
#        run: |
#          $webhookUrl = ${{ secrets.SLACK_WEBHOOK_SECRET }}
#          $jsonData = @{
#              text = "Job status job.status"
#          } | ConvertTo-Json
#
#          Invoke-WebRequest -Uri $webhookUrl -Method Post -Headers @{"Content-type"="application/json"} -Body $jsonData
